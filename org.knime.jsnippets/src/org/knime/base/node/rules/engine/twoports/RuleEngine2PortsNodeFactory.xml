<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="../rule_engine.png" type="Predictor" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>Rule Engine (Dictionary)</name>
    <shortDescription>
        Applies the rules from the second input port to the first datatable.
    </shortDescription>
    <fullDescription>
        <intro>
            Applies rules from a rules table to a data table. The rules follow the <b>Rule Engine</b> rules, though for
            <a href="http://www.dmg.org/v4-2-1/RuleSet.html">PMML RuleSets</a>
            stricter rules apply (no column reference in the outcome, cannot use regular expressions, 3-valued logic).
            If no rules match, the default value specified in the PMML tab is used, or missing when no default value was
            specified.
            <br />
            It takes a list of user-defined rules from the second input port (from the selected column(s)) and tries to
            match them to each row in the input table. If a rule matches, its outcome value is added into a new column.
            The first matching rule in order of definition determines the outcome.
            <p>
                Each rule is represented by a row, new line characters are replaced by spaces, even in string constants.
                The comments start with
                <tt>//</tt>
                in a (condition) cell, and anything after that is not interpreted as a rule in that row. Rules consist
                of a condition part (antecedent), which must evaluate to
                <i>true</i> or <i>false</i>, and an outcome (consequent, after the <tt>=&gt;</tt> symbol) which is 
                put into the new column if the rule matches.
            </p>
            <p>
                The outcome of a rule may be any of the following: a string (between quotes
                <tt>"</tt> or <tt>/</tt>), a number, a boolean constant, a reference to another column or the value of 
                a flow variable value.
                The type of the outcome column is the common super type of all possible outcomes (including the rules
                that can never match). If no rule matches, the outcome is a missing value unless a default value 
                is specified.
            </p>
            <p>
                Columns are given by their name surrounded by $, numbers are given in the usual decimal representation.
                Note that strings must not contain (double-) quotes. Flow variables are represented by
                <b>$${</b>TypeCharacterAndFlowVarName<b>}$$</b>. (Column references are not supported for PMML outputs.)
                The TypeCharacter should be 'D' for double (real) values, 'I' for integer values and 'S' for strings.
            </p>
            <p>
                The logical expressions can be grouped with parentheses. The precedence rules for them are the
                following:
                <tt>NOT</tt>
                binds most,
                <tt>AND</tt>
                ,
                <tt>XOR</tt>
                and finally
                <tt>OR</tt>
                the least. Comparison operators always take precedence over logical connectives. All operators (and
                their names) are case-sensitive.
            </p>
            <p>
                The
                <tt>ROWID</tt>
                represents the row key string, the
                <tt>ROWINDEX</tt>
                is the index of the row (first row has
                <tt>0</tt>
                value), while
                <tt>ROWCOUNT</tt>
                stands for the number of rows in the table. (These are not available for PMML.)
            </p>
            <p>Some example rules (each should be in one row):</p>
            <pre>
// This is a comment
$Col0$ > 0 => "Positive"
</pre>
            When the values in Col0 are greater than 0, we assign Positive to the result column value (if no previous
            rule matched).
            <pre>
$Col0$ = "Active" AND $Col1$ &lt;= 5 => "Outlier"
</pre>
            You can combine conditions.
            <pre>
$Col0$ LIKE "Market Street*" AND 
    ($Col1$ IN ("married", "divorced") 
        OR $Col2$ > 40) => "Strange"
$Col0$ MATCHES $${SFlowVar0}$$ OR $$ROWINDEX$$ &lt; $${IFlowVar1}$$ =>
    $Col0$
</pre>
            With parentheses you can combine multiple conditions. The result in the second case comes from one of the
            columns.
            <pre>
$Col0$ > 5 => $${SCol1}$$
</pre>
            The result can also come from a flow variable.
            <p>
                The following comparisons result true (other values are neither less, nor greater or equal to missing
                and NaN values):
                <ul>
                    <li>
                        <b>?</b>
                        =,&lt;=,&gt;=
                        <b>?</b>
                    </li>
                    <li>
                        <b>NaN</b>
                        =,&lt;=,&gt;=
                        <b>NaN</b>
                    </li>
                </ul>
            </p>
        </intro>
        <tab name="Settings">
            <option name="Rules column">Name of the column in the second input table containing the rules or just the conditions
                if an outcome column is also selected. In case the rules are available during configuration, the type of
                the outcome column is shown at the right end of this configuration row.
            </option>
            <option name="=>">
                In case your rules are in two separate columns (condition and outcome), this should be the column
                containing the outcome values. (Ignored for the comment -starting with
                <tt>//</tt>
                - conditions. In case it contains missing value for non-comment conditions, the output type will be
                String!) For String columns the outcome should not be quoted (by
                <tt>"</tt>
                or by
                <tt>/</tt>
                )
            </option>
            <option name="Treat values starting with $ as references">When checked, the values in the string -outcome- column starting with <tt>$</tt> are not treated as string constants with that value, but are tried to be parsed as references to flow variables, columns or table properties.</option>
            <option name="Append column">Name of the newly appended column, which contains the outcome of the rules.</option>
            <option name="Replace column">The column to replace</option>
            <option name="Errors">The errors found in the input table parsing the rules column</option>
            <option name="Warnings">The warnings found in the input table parsing the rules column</option>
        </tab>
        <tab name="PMML">
            <option name="Enable PMML RuleSet generation">When checked, PMML mode evaluation is used and fails if the input cannot be translated
                to PMML.
            </option>
            <option name="Hit selection">
                Possible values:
                <ul>
                    <li>
                        <b>First hit</b>
                        - the outcome of the first matching rule will be used
                    </li>
                    <li>
                        <b>Maximal matching weighted sum</b>
                        - select all matching rules, sum the weight for all outcomes, select the highest sum's outcome
                    </li>
                    <li>
                        <b>Highest matching weight</b>
                        - select from all matching rules the highest weight (regardless of order) and use its outcome
                    </li>
                </ul>
            </option>
            <option name="Default value">The default value (default score) to be applied when no rules matched.</option>
            <option name="Default confidence value">The default confidence of the rule when it is not specified by the confidence column in
                the rule table.
            </option>
            <option name="Rule confidence column">Specifies confidence of the rules based on the values in the selected column.</option>
            <option name="Default weight value">The default rule weight to be used when it is not specified by the weight column.
            </option>
            <option name="Rule weight column">Specifies weight values for the rules based on the values in the selected column.
            </option>
            <option name="Confidence column name">Computes confidence values for the output table.</option>
            <option name="Provide statistics">
                When checked,
                <tt>recordCount</tt>
                (and if
                <b>Validation column</b>
                is selected, also
                <tt>nbCorrect</tt>
                ) is computed for the PMML output.
            </option>
            <option name="Validation column">
                The column which is containing the correct prediction for the input (test/validation) table. (When
                <b>&lt;none&gt;</b>
                selected, no
                <tt>nbCorrect</tt>
                value will be computed.)
            </option>
        </tab>
    </fullDescription>
    <ports>
        <inPort index="0" name="Data">Input data</inPort>
        <inPort index="1" name="Rules">Rules to apply</inPort>
        <outPort index="0" name="Rules applied">Table containing the computed column</outPort>
        <outPort index="1" name="PMML ruleset">Possibly missing PMML port containing the rules in PMML RuleSet format</outPort>
    </ports>
</knimeNode>