<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./javaeditvar.png" type="Manipulator" xmlns="http://knime.org/node/v3.6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v3.6 http://knime.org/node/v3.6.xsd">
    <name>Java Edit Variable (simple)</name>
    <shortDescription>Edit a flow variable using java code.</shortDescription>
    <fullDescription>
        <intro>
	        <p>
	          Edit a flow variable using java code. The node is analogous to
	          the Java Snippet node: In the central panel, added java code
	          to define or modify an existing variable. The variables available
	          at the input are listed on the left. The allows you to select
	          whether you want to overwrite an existing variable or define
	          a new variable. 
	        </p>
		</intro>
		<option name="Flow Variable List">
		  The list contains the flow variables that are currently available at
		  the node input. Double clicking any of the entries will insert the
		  respective identifier at the current cursor position (replacing the
		  selection, if any).
		</option>
		<option name="Method Body">
          Enter your java code here (the entire source will be wrapped in a
          method). You can add the name of a variables 
		  by double-clicking its name in the left list. Note that numeric 
		  (double-compatible) variables will be handled as <tt>Double</tt>,
		  int-compatible variables as <tt>Integer</tt> and any other variable
		  type as <tt>String</tt>. 
		</option>
		<option name="Compile on close">
		  If unchecked, the syntax test is skipped when the settings are 
		  applied to the model, allowing the dialog to close even if there are
		  syntax errors encountered. This enables the user to temporarily close
		  the dialog, investigate the input table and then return to the
		  almost-complete-and-running snippet code in the dialog. The node will
		  not be executable (it will be red) if the code contains syntax errors.
		  This option is only for convenience, it does not have any effect on
		  the output of this node.
		</option>
		<option name="Return type">
		  Specify here the resulting type of your code snippet. Unfortunately
		  KNIME cannot determine what will be the correct return type - so you 
		  need to assist here. 
		</option>
		<option name="Overwrite or define new variable">
		  Specify whether you want to overwrite an existing variable or define
		  a new variable.
		</option>
		<link href="https://www.knime.com/knime-introductory-course/chapter7/section1/creation-and-usage-of-flow-variables">
			KNIME E-Learning Course: Creation and usage of Flow Variables in a KNIME workflow
		</link>
	</fullDescription>
    <ports>
        <inPort name="Input variables (optional)" index="0">
            Input variables (optional).</inPort>
        <outPort name="Output variables" index="0">
            Output variables.
        </outPort>
	</ports>
</knimeNode>
